<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>realworld.example</groupId>
		<artifactId>realworld-v2-user-module</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>realworld-v2-user</artifactId>

	<name>Realworld-v2: User microservice</name>
	<description>Realworld-v2: User module: The microservice WAR</description>

	<packaging>war</packaging>

	<dependencies>
		<!-- WILDFLY SWARM  -->
		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>bean-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>cdi</artifactId>
		</dependency>
		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>datasources</artifactId>
		</dependency>
		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>jaxrs</artifactId>
		</dependency>
		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>jaxrs-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>io.thorntail</groupId>
			<artifactId>swagger</artifactId>
		</dependency>

		<!-- PROJECT -->
		<!--
		<dependency>
			<groupId>realworld.example</groupId>
			<artifactId>beyond-realworld-common-jpa</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>realworld.example</groupId>
			<artifactId>beyond-realworld-common-web</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>realworld.example</groupId>
			<artifactId>beyond-realworld-user-jpa</artifactId>
			<version>${project.version}</version>
		</dependency>
		-->
		<dependency>
			<groupId>realworld.example</groupId>
			<artifactId>realworld-v2-user-jaxrs</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>realworld.example</groupId>
			<artifactId>realworld-v2-user-services</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- TEST -->
		<!--
		<dependency>
			<groupId>realworld.example</groupId>
			<artifactId>beyond-realworld-common-testutils</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>javax.json</groupId>
			<artifactId>javax.json-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-cdi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-junit5</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>io.thorntail</groupId>
				<artifactId>thorntail-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>package</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--
						It would be nice to build a hollow jar, but, at this point, hollow jars seem to
						create problems with configuration: As per the docs, section 2.2 "Hollow JAR":

						- To enable Thorntail to autodetect a JDBC driver, you must add the JAR with the driver to the thorntail.classpath system property
						- YAML configuration files in your application are not automatically applied

						Leaving it to false to keep this project as simple as possible.
					-->
					<hollow>false</hollow>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>user-h2</id>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
